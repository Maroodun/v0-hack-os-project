@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 0 0% 0%;
    --foreground: 142 76% 73%;
    --card: 0 0% 0%;
    --card-foreground: 142 76% 73%;
    --popover: 0 0% 0%;
    --popover-foreground: 142 76% 73%;
    --primary: 142 76% 36%;
    --primary-foreground: 0 0% 0%;
    --secondary: 215 28% 17%;
    --secondary-foreground: 142 76% 73%;
    --muted: 215 28% 17%;
    --muted-foreground: 142 76% 73%;
    --accent: 215 28% 17%;
    --accent-foreground: 142 76% 73%;
    --destructive: 0 62.8% 30.6%;
    --destructive-foreground: 142 76% 73%;
    --border: 142 76% 36%;
    --input: 215 28% 17%;
    --ring: 142 76% 36%;
    --radius: 0.5rem;
  }
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
    font-feature-settings: "rlig" 1, "calt" 1;
  }
}

/* CRT Screen Effects */
.crt-screen {
  position: relative;
  overflow: hidden;
}

.crt-screen::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(transparent 50%, rgba(0, 255, 0, 0.03) 50%),
    linear-gradient(90deg, transparent 50%, rgba(255, 0, 0, 0.01) 50%, transparent 51%);
  background-size: 100% 4px, 3px 100%;
  pointer-events: none;
  z-index: 1000;
}

.crt-screen::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: radial-gradient(ellipse at center, transparent 70%, rgba(0, 0, 0, 0.3) 100%);
  pointer-events: none;
  z-index: 1001;
}

/* Scanlines Animation */
.scanlines {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: linear-gradient(transparent 50%, rgba(0, 255, 0, 0.05) 50%);
  background-size: 100% 4px;
  animation: scanlines 0.1s linear infinite;
  pointer-events: none;
}

@keyframes scanlines {
  0% {
    transform: translateY(0);
  }
  100% {
    transform: translateY(4px);
  }
}

/* Glitch Text Effect */
.glitch-text {
  position: relative;
  animation: glitch 2s infinite;
}

.glitch-text::before,
.glitch-text::after {
  content: attr(data-text);
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.glitch-text::before {
  animation: glitch-1 0.5s infinite;
  color: #ff0000;
  z-index: -1;
}

.glitch-text::after {
  animation: glitch-2 0.5s infinite;
  color: #00ffff;
  z-index: -2;
}

@keyframes glitch {
  0%,
  100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-2px, 2px);
  }
  40% {
    transform: translate(-2px, -2px);
  }
  60% {
    transform: translate(2px, 2px);
  }
  80% {
    transform: translate(2px, -2px);
  }
}

@keyframes glitch-1 {
  0%,
  100% {
    transform: translate(0);
  }
  20% {
    transform: translate(-1px, 1px);
  }
  40% {
    transform: translate(-1px, -1px);
  }
  60% {
    transform: translate(1px, 1px);
  }
  80% {
    transform: translate(1px, -1px);
  }
}

@keyframes glitch-2 {
  0%,
  100% {
    transform: translate(0);
  }
  20% {
    transform: translate(1px, -1px);
  }
  40% {
    transform: translate(1px, 1px);
  }
  60% {
    transform: translate(-1px, -1px);
  }
  80% {
    transform: translate(-1px, 1px);
  }
}

/* CRT Input Effects */
.crt-input {
  position: relative;
  text-shadow: 0 0 5px currentColor;
}

.crt-input:focus {
  box-shadow: 0 0 5px currentColor, inset 0 0 5px rgba(0, 255, 0, 0.1);
}

/* Custom scrollbar for terminal and other components */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(0, 0, 0, 0.3);
}

::-webkit-scrollbar-thumb {
  background: rgba(16, 185, 129, 0.3);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: rgba(16, 185, 129, 0.5);
}

/* Matrix-like text effect */
.matrix-text {
  font-family: "Courier New", monospace;
  text-shadow: 0 0 5px #10b981;
}

/* Screen flicker effect */
@keyframes flicker {
  0%,
  100% {
    opacity: 1;
  }
  50% {
    opacity: 0.98;
  }
}

.crt-screen {
  animation: flicker 0.15s infinite linear;
}

/* Phosphor glow effect */
.phosphor-glow {
  text-shadow: 0 0 5px currentColor, 0 0 10px currentColor, 0 0 15px currentColor;
}

/* Terminal cursor blink */
@keyframes cursor-blink {
  0%,
  50% {
    opacity: 1;
  }
  51%,
  100% {
    opacity: 0;
  }
}

.cursor-blink {
  animation: cursor-blink 1s infinite;
}

/* Retro button effects */
.retro-button {
  position: relative;
  background: linear-gradient(45deg, transparent 30%, rgba(255, 255, 255, 0.1) 50%, transparent 70%);
  border: 1px solid currentColor;
  text-shadow: 0 0 5px currentColor;
  transition: all 0.3s ease;
}

.retro-button:hover {
  box-shadow: 0 0 10px currentColor, inset 0 0 10px rgba(255, 255, 255, 0.1);
  transform: translateY(-1px);
}

.retro-button:active {
  transform: translateY(0);
  box-shadow: 0 0 5px currentColor, inset 0 0 5px rgba(0, 0, 0, 0.3);
}

/* Vintage monitor bezel effect */
.monitor-bezel {
  border: 8px solid #2a2a2a;
  border-radius: 15px;
  box-shadow: inset 0 0 20px rgba(0, 0, 0, 0.8), 0 0 30px rgba(0, 0, 0, 0.5);
  background: radial-gradient(ellipse at center, #000 60%, #111 100%);
}

/* Static noise overlay */
.static-noise {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  opacity: 0.02;
  background-image: radial-gradient(circle, #fff 1px, transparent 1px);
  background-size: 2px 2px;
  animation: static 0.1s infinite;
  pointer-events: none;
}

@keyframes static {
  0% {
    transform: translate(0, 0);
  }
  10% {
    transform: translate(-1px, 1px);
  }
  20% {
    transform: translate(1px, -1px);
  }
  30% {
    transform: translate(-1px, -1px);
  }
  40% {
    transform: translate(1px, 1px);
  }
  50% {
    transform: translate(-1px, 1px);
  }
  60% {
    transform: translate(1px, -1px);
  }
  70% {
    transform: translate(-1px, -1px);
  }
  80% {
    transform: translate(1px, 1px);
  }
  90% {
    transform: translate(-1px, 1px);
  }
  100% {
    transform: translate(0, 0);
  }
}

/* Taskbar positioning */
.taskbar-bottom {
  position: fixed !important;
  bottom: 0 !important;
  top: auto !important;
  left: 0;
  right: 0;
  z-index: 9999;
}

/* Ensure desktop content doesn't overlap with taskbar */
.desktop-content {
  padding-bottom: 60px;
  min-height: calc(100vh - 60px);
}
